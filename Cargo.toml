[package]
name = "quic-rpc"
version = "0.17.3"
edition = "2021"
authors = ["RÃ¼diger Klaehn <rklaehn@protonmail.com>", "n0 team"]
keywords = ["api", "protocol", "network", "rpc"]
categories = ["network-programming"]
license = "Apache-2.0/MIT"
repository = "https://github.com/n0-computer/quic-rpc"
description = "A streaming rpc system based on quic"

# Sadly this also needs to be updated in .github/workflows/ci.yml
rust-version = "1.76"

[dependencies]
bytes = { version = "1", optional = true }
flume = { version = "0.11", optional = true }
futures-lite = "2.3.0"
futures-sink = "0.3.30"
futures-util = { version = "0.3.30", features = ["sink"] }
hyper = { version = "0.14.16", features = ["full"], optional = true }
iroh = { version = "0.31", optional = true }
pin-project = "1"
quinn = { package = "iroh-quinn", version = "0.12", optional = true }
serde = { version = "1", features = ["derive"] }
tokio = { version = "1", default-features = false, features = ["macros", "sync"] }
tokio-serde = { version = "0.9", features = [], optional = true }
tokio-util = { version = "0.7", features = ["rt"] }
postcard = { version = "1", features = ["use-std"], optional = true }
tracing = "0.1"
futures = { version = "0.3.30", optional = true }
anyhow = "1"
document-features = "0.2"
# for test-utils
rcgen = { version = "0.13", optional = true }
# for test-utils
rustls = { version = "0.23", default-features = false, features = ["ring"], optional = true }

# Indirect dependencies, is needed to make the minimal crates versions work
slab = "0.4.9" # iroh-quinn
smallvec = "1.13.2"
time = "0.3.36" # serde

[dev-dependencies]
anyhow = "1"
async-stream = "0.3.3"
derive_more = { version = "1", features = ["from", "try_into", "display"] }
rand = "0.8"

serde = { version = "1", features = ["derive"] }
tokio = { version = "1", features = ["full"] }
quinn = { package = "iroh-quinn", version = "0.12", features = ["ring"] }
rcgen = "0.13"
thousands = "0.2.0"
tracing-subscriber = "0.3.16"
tempfile = "3.5.0"
proc-macro2 = "1.0.66"
futures-buffered = "0.2.4"
testresult = "0.4.1"
nested_enum_utils = "0.1.0"
tokio-util = { version = "0.7", features = ["rt"] }

[features]
## HTTP transport using the `hyper` crate
hyper-transport = ["dep:flume", "dep:hyper", "dep:postcard", "dep:bytes", "dep:tokio-serde", "tokio-util/codec"]
## QUIC transport using the `iroh-quinn` crate
quinn-transport = ["dep:flume", "dep:quinn", "dep:postcard", "dep:bytes", "dep:tokio-serde", "tokio-util/codec"]
## In memory transport using the `flume` crate
flume-transport = ["dep:flume"]
## p2p QUIC transport using the `iroh` crate
iroh-transport = ["dep:iroh", "dep:flume", "dep:postcard", "dep:tokio-serde", "tokio-util/codec"]
## Macros for creating request handlers
macros = []
## Utilities for testing
test-utils = ["dep:rcgen", "dep:rustls"]
## Default, includes the memory transport
default = ["flume-transport"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "quicrpc_docsrs"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ["cfg(quicrpc_docsrs)"] }

[[example]]
name = "errors"
required-features = ["flume-transport"]

[[example]]
name = "macro"
required-features = ["flume-transport", "macros"]

[[example]]
name = "store"
required-features = ["flume-transport", "macros"]

[[example]]
name = "modularize"
required-features = ["flume-transport"]

[workspace]
members = ["examples/split/types", "examples/split/server", "examples/split/client", "quic-rpc-derive"]
